name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.10, 3.11]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Lint (flake8) if configured
        run: |
          if command -v flake8 >/dev/null 2>&1; then flake8 || true; fi

      - name: Run tests (pytest)
        run: |
          if [ -d tests ] || ls test* 1> /dev/null 2>&1; then pytest -q; else echo "No tests found"; fi

  build-docker:
    if: startsWith(github.ref, 'refs/heads/') && github.repository == 'Lintshiwe/PestVisionAI2.1'
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          if [ -f Dockerfile ]; then docker build -t pestvision:${{ github.sha }} .; else echo "No Dockerfile, skipping"; fi

      - name: Log in to Docker Hub
        if: secrets.DOCKERHUB_USERNAME && secrets.DOCKERHUB_TOKEN
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push image
        if: secrets.DOCKERHUB_USERNAME && secrets.DOCKERHUB_TOKEN
        run: |
          docker tag pestvision:${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/pestvision:${{ github.sha }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/pestvision:${{ github.sha }}